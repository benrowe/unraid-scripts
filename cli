#!/bin/bash
set -e

function grab() {
    if [ "$(command -v wget)" ]; then
        wget $1 -p $2
    else
        curl $1 -o $2
    fi
}

# todo, when booting the docker container, do a composer install

COLOR_ERROR='\033[0;31m'
COLOR_INFO='\033[0;32m'
COLOR_DEFAULT='\033[0m' # No Color

# test we have docker installed
if [ ! "$(command -v docker)" ]; then
    echo -e "${COLOR_ERROR}Docker is not installed${COLOR_DEFAULT}"
    exit 1
fi

if [ "$1" == "init" ]; then
    echo "INIT"

    if [ -f ".env" ]; then
        echo -e ".env ${COLOR_ERROR}already exists${COLOR_DEFAULT}"
        exit 1
    fi

    # Generate files
    # .env
    grab "https://raw.githubusercontent.com/benrowe/unraid-scripts/master/.env.example" ".env"

    # config.yml
    grab "https://raw.githubusercontent.com/benrowe/unraid-scripts/master/config.yml" "config.yml"

    mkdir commands
    echo '{"require":{}}' > composer.json
    ./cli start
    exit
fi

# if no .env at this point, fail!

if [ ! -f ".env" ]; then
    echo -e "${COLOR_ERROR}.env file not found, please run ./cli init first${COLOR_DEFAULT}"
    exit 1
fi

export $(egrep -v '^#' .env | xargs)

ARG=$1

if [ $ARG =~ ^start$ ]; then
    echo "start"
    if [ ! "$(docker ps -a | grep $DOCKER_IMAGE_NAME)" ]; then
        # create container, but don't start
        echo "creating"

        docker create \
            --name $DOCKER_CONTAINER_NAME \
            -v "$PWD":/usr/src/myapp/data \
            -v "$USER_DATA_DIR":/usr/data/ \
            -p 8888:8888
            --env-file .env
            "$DOCKER_IMAGE_NAME"
    fi
    docker run $DOCKER_CONTAINER_NAME
    exit 1
fi

if [ $ARG == "stop" ]; then
    docker stop $DOCKER_CONTAINER_NAME
    exit 1
fi

if [ $ARG == "remove" ]; then
    #remove the container

    mkdir -p backup
    mv .env backup
    mv composer.json backup
    mv config.yml backup
    mv commands backup
    docker rm --force $DOCKER_CONTAINER_NAME
    exit 1
fi

if [ $ARG == "restart" ]; then
    ./cli stop
    ./cli start
    exit 1
fi

# runs the ./cli.php in the php:7.0-cli container

docker run -it $DOCKER_CONTAINER_NAME php $PHP_ENTRY $@